falcosidekick:
  enabled: true
  webui:
    enabled: true
  config:
    webhook:
    address: http://webhook-falco-eventsource-svc.argo-events.svc.cluster.local:12000/falco
    customHeaders: Source:falco
falco:
  rulesFile:
    - /etc/falco/falco_rules.yaml
    - /etc/falco/falco_rules.local.yaml
    - /etc/falco/k8s_audit_rules.yaml
    - /etc/falco/rules.d/custom-rules.yaml
customRules:
  custom-rules.yaml: |-
    - rule: COOKIE tampering detector
      desc: Detect tampering of super precious cookie recipes
      condition: modify and (evt.arg.oldpath startswith '/usr/share/nginx' or evt.arg.path startswith '/usr/share/nginx')
      output: Cookie recipes tampering detected, secure your cookies,(uid=%user.uid container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag %evt.arg.oldpath)
      priority: EMERGENCY
      tags: [importantrecipesalert]

    - macro: ping_allowed_dirs
      condition: evt.arg[1] startswith /var/log/apache2 or evt.arg[1] startswith /var/lib/apache2 or evt.arg[1] startswith /dev/tty

    - rule: Unauthorized process
      desc: There is a running process not described in the base template
      condition: spawned_process and container and k8s.ns.name=ping and not proc.name in (apache2, sh, ping)
      output: Unauthorized process (%proc.cmdline) running in (%container.id)
      priority: ERROR
      tags: [process]

    - rule: Apache writing to non allowed directory
      desc: Attempt to write to directories that should be immutable
      condition: open_write and container and k8s.ns.name=ping and not (ping_allowed_dirs and proc.name in (apache2))
      output: "Writing to forbidden directory (user=%user.name command=%proc.cmdline file=%fd.name)"
      priority: ERROR
      tags: [filesystem]

    - rule: Forbidden network outbound connection
      desc: A non-whitelisted process is trying to reach the Internet
      condition: outbound and container and k8s.ns.name=ping and not proc.name in (ping, apache2)
      output: Forbidden outbound connection (user=%user.name command=%proc.cmdline connection=%fd.name)
      priority: ERROR
      tags: [network]

    - macro: keepalived_writing_conf
      condition: (proc.name in (keepalived, kube-keepalived) and fd.name=/etc/keepalived/keepalived.conf)
